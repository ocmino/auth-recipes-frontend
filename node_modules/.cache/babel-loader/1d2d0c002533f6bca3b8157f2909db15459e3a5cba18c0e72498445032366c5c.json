{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipe = () => {\n  _s();\n  const [recipe, setRecipe] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  //i want the search to come from the recipes page\n\n  //get {recipe.recipeName} from Recipes.js\n  const search = window.location.search;\n\n  //`http://localhost:8080/api/v1/recipes/getRecipe?name=${search}`\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      window.location.href = '/login';\n    } else {\n      axios.get(`http://localhost:8080/api/v1/recipes/getRecipe?name=${search}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        setRecipe(res.data);\n        setIngredients(res.data.ingredients);\n      }).catch(err => console.log(err));\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.recipeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ingredient.ingredientName, \" - \", ingredient.quantity]\n      }, ingredient.ingredientId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 1\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 1\n  }, this);\n};\n_s(Recipe, \"l1YpFNhxxGFO3sfbG7CApStWYRg=\");\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["React","useState","useEffect","axios","Recipe","recipe","setRecipe","ingredients","setIngredients","search","window","location","token","localStorage","getItem","href","get","headers","Authorization","then","res","data","catch","err","console","log","recipeName","instructions","map","ingredient","ingredientName","quantity","ingredientId"],"sources":["/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Recipe = () => {\nconst [recipe, setRecipe] = useState({});\nconst [ingredients, setIngredients] = useState([]);\n//i want the search to come from the recipes page\n\n\n//get {recipe.recipeName} from Recipes.js\nconst search = window.location.search;\n\n\n//`http://localhost:8080/api/v1/recipes/getRecipe?name=${search}`\n\nuseEffect(() => {\nconst token = localStorage.getItem('token');\nif (!token) {\nwindow.location.href = '/login';\n} else {\naxios\n.get(`http://localhost:8080/api/v1/recipes/getRecipe?name=${search}`, {\nheaders: {\nAuthorization: `Bearer ${token}`,\n},\n})\n.then((res) => {\nsetRecipe(res.data);\nsetIngredients(res.data.ingredients);\n})\n.catch((err) => console.log(err));\n}\n}, [search]);\n\n\n\nreturn (\n<div>\n\n\n<div>\n<h1>Recipe</h1>\n<h1>{recipe.recipeName}</h1>\n<h2>Instructions</h2>\n<p>{recipe.instructions}</p>\n</div>\n<h2>Ingredients</h2>\n<ul>\n{ingredients.map((ingredient) => (\n<li key={ingredient.ingredientId}>\n{ingredient.ingredientName} - {ingredient.quantity}\n</li>\n))}\n</ul>\n</div>\n);\n};\n\n\n\nexport default Recipe;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD;;EAGA;EACA,MAAMQ,MAAM,GAAGC,MAAM,CAACC,QAAQ,CAACF,MAAM;;EAGrC;;EAEAP,SAAS,CAAC,MAAM;IAChB,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACZF,MAAM,CAACC,QAAQ,CAACI,IAAI,GAAG,QAAQ;IAC/B,CAAC,MAAM;MACPZ,KAAK,CACJa,GAAG,CAAE,uDAAsDP,MAAO,EAAC,EAAE;QACtEQ,OAAO,EAAE;UACTC,aAAa,EAAG,UAASN,KAAM;QAC/B;MACA,CAAC,CAAC,CACDO,IAAI,CAAEC,GAAG,IAAK;QACfd,SAAS,CAACc,GAAG,CAACC,IAAI,CAAC;QACnBb,cAAc,CAACY,GAAG,CAACC,IAAI,CAACd,WAAW,CAAC;MACpC,CAAC,CAAC,CACDe,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACjC;EACA,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAIZ,oBACA;IAAA,wBAGA;MAAA,wBACA;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eACf;QAAA,UAAKJ,MAAM,CAACqB;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5B;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACrB;QAAA,UAAIrB,MAAM,CAACsB;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB,eACN;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAA,UACCpB,WAAW,CAACqB,GAAG,CAAEC,UAAU,iBAC5B;QAAA,WACCA,UAAU,CAACC,cAAc,EAAC,KAAG,EAACD,UAAU,CAACE,QAAQ;MAAA,GADzCF,UAAU,CAACG,YAAY;QAAA;QAAA;QAAA;MAAA,QAG/B;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEN,CAAC;AAAC,GArDI5B,MAAM;AAAA,KAANA,MAAM;AAyDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}