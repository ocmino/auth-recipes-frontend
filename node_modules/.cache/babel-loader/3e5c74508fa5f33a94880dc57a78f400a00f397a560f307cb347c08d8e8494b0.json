{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlindqvist/WS/auth-frontend-application/src/Components/PrivateRoute.js\";\n//create a private route based on jwt token\n//if login attempt generates a token, navigate to protected route of Dashboard\n//if login attempt fails, navigate to Login page\n//if user is not logged in, navigate to Login page\n//if user is logged in, navigate to Dashboard\n\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport DeleteUser from './DeleteUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoutes() {\n  let userid = localStorage.getItem(\"token\") == null ? false : true;\n  if (userid) {\n    console.log(\"user is logged in\");\n  } else {\n    console.log(\"user is not logged in\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: userid ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userid ? /*#__PURE__*/_jsxDEV(DeleteUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n}\n_c = PrivateRoutes;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["React","Navigate","Dashboard","DeleteUser","PrivateRoutes","userid","localStorage","getItem","console","log"],"sources":["/Users/jonathanlindqvist/WS/auth-frontend-application/src/Components/PrivateRoute.js"],"sourcesContent":["//create a private route based on jwt token\n//if login attempt generates a token, navigate to protected route of Dashboard\n//if login attempt fails, navigate to Login page\n//if user is not logged in, navigate to Login page\n//if user is logged in, navigate to Dashboard\n\nimport React from 'react'\nimport { Navigate } from 'react-router-dom'\nimport Dashboard from './Dashboard';\nimport DeleteUser from './DeleteUser';\n\n\nexport default function PrivateRoutes() {\n    let  userid = localStorage.getItem(\"token\") == null ? false : true;\n\n    if (userid) {\n        console.log(\"user is logged in\")\n    }\n    else {\n        console.log(\"user is not logged in\")\n    }\n\n    return (\n        <><div>\n            {userid ? <Dashboard /> : <Navigate to=\"/login\" />}\n        </div><div>\n                {userid ? <DeleteUser /> : <Navigate to=\"/login\" />}\n            </div></>\n    )\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAAA;AAGtC,eAAe,SAASC,aAAa,GAAG;EACpC,IAAKC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI;EAElE,IAAIF,MAAM,EAAE;IACRG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACpC,CAAC,MACI;IACDD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACxC;EAEA,oBACI;IAAA,wBAAE;MAAA,UACGJ,MAAM,gBAAG,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG,gBAAG,QAAC,QAAQ;QAAC,EAAE,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChD;MAAA,UACGA,MAAM,gBAAG,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,gBAAG,QAAC,QAAQ;QAAC,EAAE,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjD;EAAA,gBAAG;AAErB;AAAC,KAjBuBD,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}