{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlindqvist/WS/auth-frontend-application/src/Components/PrivateRoute.js\";\n//create a private route based on jwt token\n//if login attempt generates a token, navigate to protected route of Dashboard\n//if login attempt fails, navigate to Login page\n//if user is not logged in, navigate to Login page\n//if user is logged in, navigate to Dashboard\n\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport DeleteUser from './DeleteUser';\n\n//private routes for logged in users\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet userid = localStorage.getItem(\"token\") == null ? false : true;\nconst ProtectedRoute = _ref => {\n  let {\n    user,\n    children\n  } = _ref;\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/landing\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default function PrivateRoute() {\n  return /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n    user: userid,\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n}\n_c2 = PrivateRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","Dashboard","DeleteUser","userid","localStorage","getItem","ProtectedRoute","user","children","PrivateRoute"],"sources":["/Users/jonathanlindqvist/WS/auth-frontend-application/src/Components/PrivateRoute.js"],"sourcesContent":["//create a private route based on jwt token\n//if login attempt generates a token, navigate to protected route of Dashboard\n//if login attempt fails, navigate to Login page\n//if user is not logged in, navigate to Login page\n//if user is logged in, navigate to Dashboard\n\nimport React from 'react'\nimport { Navigate, Outlet } from 'react-router-dom'\nimport Dashboard from './Dashboard';\nimport DeleteUser from './DeleteUser';\n\n\n\n    //private routes for logged in users\n\n    let  userid = localStorage.getItem(\"token\") == null ? false : true;\n\n    const ProtectedRoute = ({ user, children }) => {\n        if (!user) {\n          return <Navigate to=\"/landing\" replace />;\n        }\n      \n        return children;\n      };\n\n    export default function PrivateRoute() {\n        return (\n            <ProtectedRoute user={userid}>\n                <Dashboard />\n            </ProtectedRoute>\n        )\n    }"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;;AAIjC;AAAA;AAEA,IAAKC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI;AAElE,MAAMC,cAAc,GAAG,QAAwB;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAS,CAAC;EACtC,IAAI,CAACD,IAAI,EAAE;IACT,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC,UAAU;MAAC,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG;EAC3C;EAEA,OAAOC,QAAQ;AACjB,CAAC;AAAC,KANEF,cAAc;AAQpB,eAAe,SAASG,YAAY,GAAG;EACnC,oBACI,QAAC,cAAc;IAAC,IAAI,EAAEN,MAAO;IAAA,uBACzB,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACA;AAEzB;AAAC,MANuBM,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}