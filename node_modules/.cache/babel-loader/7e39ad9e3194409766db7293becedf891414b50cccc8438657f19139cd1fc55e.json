{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Recipe.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nfunction Recipes() {\n    const [recipes, setRecipes] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if(!token) {\n            window.location.href = '/login';\n        } else {\n            axios.get('http://localhost:8080/api/v1/recipes/getAllRecipes', {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then(res => setRecipes(res.data))\n            .catch(err => console.log(err));\n        }\n    }, []);\n\n    return (\n        <div>\n            <h1>All Recipes</h1>\n            <ul>\n                {recipes.map((recipe, index) => (\n                    <li key={index}>\n                        <Link to={{pathname: '/recipe', state: {recipe: recipe}}}>{recipe.recipeName}</Link>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Recipes;\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipe = () => {\n  _s();\n  const [recipe, setRecipe] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  //the search should come from Recipes.js\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const recipe = window.location.state.recipe;\n    setRecipe(recipe);\n    setIngredients(recipe.ingredients);\n  }, []);\n  const searchIngredient = e => {\n    e.preventDefault();\n    axios.get(`http://localhost:8080/api/v1/recipes/getRecipe/${search}`).then(res => {\n      setRecipe(res.data);\n      setIngredients(res.data.ingredients);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipe.recipeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchIngredient,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by ingredient\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Recipe, \"OErLI1vKBtQ72XCOUo19E+uO4wo=\");\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["React","useState","useEffect","axios","Recipe","recipe","setRecipe","ingredients","setIngredients","search","setSearch","window","location","state","searchIngredient","e","preventDefault","get","then","res","data","catch","err","console","log","recipeName","map","ingredient","index","target","value"],"sources":["/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Recipe.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nfunction Recipes() {\n    const [recipes, setRecipes] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if(!token) {\n            window.location.href = '/login';\n        } else {\n            axios.get('http://localhost:8080/api/v1/recipes/getAllRecipes', {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then(res => setRecipes(res.data))\n            .catch(err => console.log(err));\n        }\n    }, []);\n\n    return (\n        <div>\n            <h1>All Recipes</h1>\n            <ul>\n                {recipes.map((recipe, index) => (\n                    <li key={index}>\n                        <Link to={{pathname: '/recipe', state: {recipe: recipe}}}>{recipe.recipeName}</Link>\n\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Recipes;\n*/ \n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Recipe = () => {\nconst [recipe, setRecipe] = useState({});\nconst [ingredients, setIngredients] = useState([]);\n//the search should come from Recipes.js\nconst [search, setSearch] = useState('');\n\n\nuseEffect(() => {\n    const recipe = window.location.state.recipe;\n    setRecipe(recipe);\n    setIngredients(recipe.ingredients);\n}\n, []);\n\nconst searchIngredient = (e) => {\n    e.preventDefault();\n    axios.get(`http://localhost:8080/api/v1/recipes/getRecipe/${search}`)\n    .then(res => {\n        setRecipe(res.data);\n        setIngredients(res.data.ingredients);\n    })\n    .catch(err => console.log(err));\n}\n\nreturn (\n    <div>\n        <h1>{recipe.recipeName}</h1>\n        <h3>Ingredients</h3>\n        <ul>\n            {ingredients.map((ingredient, index) => (\n                <li key={index}>{ingredient}</li>\n            ))}\n        </ul>\n        <form onSubmit={searchIngredient}>\n            <input type=\"text\" placeholder=\"Search by ingredient\" onChange={e => setSearch(e.target.value)} />\n            <button type=\"submit\">Search</button>\n        </form>\n    </div>\n)\n}\n\nexport default Recipe;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAGxCC,SAAS,CAAC,MAAM;IACZ,MAAMG,MAAM,GAAGM,MAAM,CAACC,QAAQ,CAACC,KAAK,CAACR,MAAM;IAC3CC,SAAS,CAACD,MAAM,CAAC;IACjBG,cAAc,CAACH,MAAM,CAACE,WAAW,CAAC;EACtC,CAAC,EACC,EAAE,CAAC;EAEL,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClBb,KAAK,CAACc,GAAG,CAAE,kDAAiDR,MAAO,EAAC,CAAC,CACpES,IAAI,CAACC,GAAG,IAAI;MACTb,SAAS,CAACa,GAAG,CAACC,IAAI,CAAC;MACnBZ,cAAc,CAACW,GAAG,CAACC,IAAI,CAACb,WAAW,CAAC;IACxC,CAAC,CAAC,CACDc,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAKjB,MAAM,CAACoB;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5B;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAA,UACKlB,WAAW,CAACmB,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAC/B;QAAA,UAAiBD;MAAU,GAAlBC,KAAK;QAAA;QAAA;QAAA;MAAA,QACjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAM,QAAQ,EAAEd,gBAAiB;MAAA,wBAC7B;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,sBAAsB;QAAC,QAAQ,EAAEC,CAAC,IAAIL,SAAS,CAACK,CAAC,CAACc,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAClG;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GAvCK1B,MAAM;AAAA,KAANA,MAAM;AAyCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}