{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Auth.js\",\n  _s = $RefreshSig$();\n//create an auth component that will be used to check if the user is logged in or not\n//based on jwt token\n//useContext\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../Context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Auth() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!currentUser) {\n      navigate('/login');\n    }\n    setLoading(false);\n  }, [currentUser, navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n_s(Auth, \"Rc0pjo/2W++sKFAommonCAeoOVw=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","AuthContext","Auth","loading","setLoading","currentUser","navigate","children"],"sources":["/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Auth.js"],"sourcesContent":["//create an auth component that will be used to check if the user is logged in or not\n//based on jwt token\n//useContext\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../Context/AuthContext';\n\nfunction Auth() {\n    const [loading, setLoading] = useState(true);\n    const { currentUser } = useContext(AuthContext);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (!currentUser) {\n            navigate('/login');\n        }\n        setLoading(false);\n    }, [currentUser, navigate]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return <div>{children}</div>;\n}\n\nexport default Auth;"],"mappings":";;AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AAAC;AAErD,SAASC,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM;IAAEQ;EAAY,CAAC,GAAGN,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAMK,QAAQ,GAAGN,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,WAAW,EAAE;MACdC,QAAQ,CAAC,QAAQ,CAAC;IACtB;IACAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACC,WAAW,EAAEC,QAAQ,CAAC,CAAC;EAE3B,IAAIH,OAAO,EAAE;IACT,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAChC;EAEA,oBAAO;IAAA,UAAMI;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAO;AAChC;AAAC,GAjBQL,IAAI;EAAA,QAGQF,WAAW;AAAA;AAAA,KAHvBE,IAAI;AAmBb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}