{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlindqvist/WS/auth-frontend-application/src/Components/PrivateRoute.js\";\n//create a private route based on jwt token\n//if login attempt generates a token, navigate to protected route of Dashboard\n//if login attempt fails, navigate to Login page\n//if user is not logged in, navigate to Login page\n//if user is logged in, navigate to Dashboard\n\nimport React from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport Dashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoutes() {\n  let userid = localStorage.getItem(\"token\") == null ? false : true;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"if (userid) \", /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), \" else \", /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_c = PrivateRoutes;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["React","Outlet","Navigate","Dashboard","PrivateRoutes","userid","localStorage","getItem"],"sources":["/Users/jonathanlindqvist/WS/auth-frontend-application/src/Components/PrivateRoute.js"],"sourcesContent":["//create a private route based on jwt token\n//if login attempt generates a token, navigate to protected route of Dashboard\n//if login attempt fails, navigate to Login page\n//if user is not logged in, navigate to Login page\n//if user is logged in, navigate to Dashboard\n\nimport React from 'react'\nimport { Outlet, Navigate } from 'react-router-dom'\nimport Dashboard from './Dashboard';\n\n\n\nexport default function PrivateRoutes() {\n    let  userid = localStorage.getItem(\"token\") == null ? false : true;\n    return (\n        <>\n            if (userid) {\n                <Dashboard />\n            } else {\n                <Navigate to=\"/login\" />\n            }\n            \n        </>\n\n    )\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnD,OAAOC,SAAS,MAAM,aAAa;AAAC;AAAA;AAIpC,eAAe,SAASC,aAAa,GAAG;EACpC,IAAKC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI;EAClE,oBACI;IAAA,WAAE,cACc,eACR,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG,EAChB,QAAM,eACH,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAG7B;AAGX;AAAC,KAbuBH,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}