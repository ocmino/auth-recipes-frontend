{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Recipes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Recipes() {\n  _s();\n  const [recipeName, setRecipeName] = useState('');\n  const [recipe, setRecipe] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const token = localStorage.getItem('token');\n    axios.get(`http://localhost:8080/api/v1/recipes/getRecipe?name=${recipeName}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => {\n      setRecipe(res.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setIsLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"recipeName\",\n        children: \"Recipe Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"recipeName\",\n        value: recipeName,\n        onChange: e => setRecipeName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), recipe && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: recipe.recipeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Prep Time: \", recipe.prepTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cook Time: \", recipe.cookTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Servings: \", recipe.servings]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Instructions: \", recipe.instructions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [ingredient.ingredientName, \" - \", ingredient.quantity]\n        }, ingredient.ingredientId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Recipes, \"Cjz/LHRCtyz5wAS5PrNfubq3hek=\");\n_c = Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useState","axios","Recipes","recipeName","setRecipeName","recipe","setRecipe","ingredients","setIngredients","isLoading","setIsLoading","handleSubmit","e","preventDefault","token","localStorage","getItem","get","headers","then","res","data","catch","err","console","log","target","value","prepTime","cookTime","servings","instructions","map","ingredient","ingredientName","quantity","ingredientId"],"sources":["/Users/jonathanlindqvist/auth-frontend-application-test/src/Components/Recipes.js"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nexport default function Recipes() {\nconst [recipeName, setRecipeName] = useState('')\nconst [recipe, setRecipe] = useState({})\nconst [ingredients, setIngredients] = useState([])\nconst [isLoading, setIsLoading] = useState(false)\n\nconst handleSubmit = (e) => {\n    e.preventDefault()\n    setIsLoading(true)\n    const token = localStorage.getItem('token')\n    axios.get(`http://localhost:8080/api/v1/recipes/getRecipe?name=${recipeName}`, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    })\n        .then(res => {\n            setRecipe(res.data)\n            setIsLoading(false)\n        })\n        .catch(err => {\n            console.log(err)\n            setIsLoading(false)\n        })\n}\n\nreturn (\n    <div>\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"recipeName\">Recipe Name</label>\n            <input\n                type=\"text\"\n                id=\"recipeName\"\n                value={recipeName}\n                onChange={(e) => setRecipeName(e.target.value)}\n                />\n<button type=\"submit\" className=\"btn btn-primary\">Search</button>\n</form>\n{recipe && (\n<div>\n<h3>{recipe.recipeName}</h3>\n<p>Prep Time: {recipe.prepTime}</p>\n<p>Cook Time: {recipe.cookTime}</p>\n<p>Servings: {recipe.servings}</p>\n<p>Instructions: {recipe.instructions}</p>\n<h4>Ingredients:</h4>\n<ul>\n{ingredients.map((ingredient) => (\n<li key={ingredient.ingredientId}>\n{ingredient.ingredientName} - {ingredient.quantity}\n</li>\n))}\n</ul>\n</div>\n)}\n</div>\n)\n}\n\n           \n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,eAAe,SAASC,OAAO,GAAG;EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBH,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3Cf,KAAK,CAACgB,GAAG,CAAE,uDAAsDd,UAAW,EAAC,EAAE;MAC3Ee,OAAO,EAAE;QACL,eAAe,EAAG,UAASJ,KAAM;MACrC;IACJ,CAAC,CAAC,CACGK,IAAI,CAACC,GAAG,IAAI;MACTd,SAAS,CAACc,GAAG,CAACC,IAAI,CAAC;MACnBX,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,CACDY,KAAK,CAACC,GAAG,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBb,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IAAA,wBACI;MAAM,QAAQ,EAAEC,YAAa;MAAA,wBACzB;QAAO,OAAO,EAAC,YAAY;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC/C;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,YAAY;QACf,KAAK,EAAER,UAAW;QAClB,QAAQ,EAAGS,CAAC,IAAKR,aAAa,CAACQ,CAAC,CAACc,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eAClB;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D,EACNtB,MAAM,iBACP;MAAA,wBACA;QAAA,UAAKA,MAAM,CAACF;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5B;QAAA,WAAG,aAAW,EAACE,MAAM,CAACuB,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACnC;QAAA,WAAG,aAAW,EAACvB,MAAM,CAACwB,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACnC;QAAA,WAAG,YAAU,EAACxB,MAAM,CAACyB,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAClC;QAAA,WAAG,gBAAc,EAACzB,MAAM,CAAC0B,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1C;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACrB;QAAA,UACCxB,WAAW,CAACyB,GAAG,CAAEC,UAAU,iBAC5B;UAAA,WACCA,UAAU,CAACC,cAAc,EAAC,KAAG,EAACD,UAAU,CAACE,QAAQ;QAAA,GADzCF,UAAU,CAACG,YAAY;UAAA;UAAA;UAAA;QAAA,QAG/B;MAAC;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEN;AAAC,GAxDuBlC,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}